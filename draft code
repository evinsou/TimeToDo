<% for agile_labor in @agile_labors %>
  <% case agile_labor.exec_order %>
    <% when "Current" %>
      <div class="Current">
        <%= render agile_labor %>
      </div><br />
    <% when "Backlog" %>
      <div class="Backlog">
        <%= render agile_labor %>
      </div><br />
    <% when "Icebox"%>
      <div class="Icebox">
        <%= render agile_labor %>
      </div><br />        
    <% end %>
<% end %>
  <% if agile_labor.exec_order == 'Current' %>
    <%= render agile_labor %>
  <% end %>
  <div id="current_agile_labors">
    <% render @agile_labors %>
  </div>

  <div id="backlog_agile_labors">
    <% render @agile_labors %>
  </div>

  <div id="icebox_agile_labors">
    <% render @agile_labors %>
  </div>

<% @agile_labors.each do |agile_labor| %>
  <% case agile_labor.exec_order %>
    <% when "Current" %>
    <td>
      <div class="Current">
        <%= render agile_labor %>
      </div>
    </td>
    <% when "Backlog" %>
    <td>
      <div class="Backlog">
        <%= render agile_labor %>
      </div>
    </td>
    <% when "Icebox"%>
    <td>
      <div class="Icebox">
        <%= render agile_labor %>
      </div>
    </td>
    <% end %>
<% end %>

, :html => {:style => 'display: block;'}, :remote => true

<div id="sortTabs"> 
    <ul>
      <li><a href="#recent_tab"><%= link_to "recent tasks", recent_tasks_path(@task, :format => :js), :remote => true, :id => 'recent_tasks_link'%></a></li>
      <li><a href="#early_tab"><%= link_to "early tasks", early_tasks_path(@task, :format => :js), :remote => true, :id => 'early_tasks_link'%></a></li>
      <li><a href="#importance_tab">Importance</a></li>
    </ul>
    <div id="recent_tab">
      <div id="tasks">
        <%= render(:file => 'tasks/recent_tasks.html.erb')%>
      </div>
    </div>
    <div id="early_tab">
      <div id="tasks">
        <%= render(:file => 'tasks/early_tasks.html.erb') %>"
      </div>
    </div>
    <div id="importance_tab">
      <p>Tab-x</p>
    </div>
  </div>


#    let(:task) {mock_model(Task, :id =>1, :user_id => 1).as_null_object}
=begin
    before(:each) do
      @current_user = mock_model(User, :id =>'1').as_null_object
      @task = mock_model(Task, :id =>1, :user_id => 1).as_null_object
#      controller.stub(:authenticate).and_return(true) , 
      controller.stub(:current_user).and_return(@current_user)
      controller.stub(:tasks).and_return(@task)
=begin
    it "create new task" do
      @current_user.tasks.stub(:new).and_return(@task)
#      @current_user = mock_model(User, :id =>1, :tasks => [@task])
@task.stub(:save).and_return(true)      
      @current_user.tasks.should_receive(:new).with("body" => "write tests to cover off most scenarios").and_return(@task)
      post :create, :task => { "body" => "write tests to cover off most scenarios"}
    end

    it "saves task"do
#      @current_user = mock_model(User, :id =>'1', :tasks => [@task])
#      @task = mock_model(Task, :id =>1, :user_id => 1)
#      controller.stub(:current_user).and_return(@current_user)
#      @current_user.tasks.stub(:new).and_return(@task)
      @task.should_receive(:save).and_return(true)
      post :create
    end
    it "redirects to Task index" do      
#      @current_user = mock_model(User, :id =>'1', :tasks => [@task])
#      @task = mock_model(Task, :id =>1, :user_id => 1)
#      controller.stub(:current_user).and_return(@current_user)
#      @current_user.tasks.stub(:new).and_return(@task)
#      @task.stub(:save)
@task.stub(:save).and_return(true)
        post :create
        response.should redirect_to :action => "index"
    end
  end
    end
=end
